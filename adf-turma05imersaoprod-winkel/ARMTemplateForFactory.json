{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-turma05imersaoprod-winkel"
		},
		"ls_azure_sqldb_powerquery_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_azure_sqldb_powerquery'"
		},
		"ls_api_new_y_t_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.nytimes.com/svc/movies.v2"
		},
		"ls_azure_sqldb_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "secret-db-azure"
		},
		"ls_datalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsturma05imersaowprod.dfs.core.windows.net"
		},
		"ls_filesystem_local_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "c:\\adf"
		},
		"ls_filesystem_local_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "analysis"
		},
		"ls_key_vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-turma05im-prod-winkel.vault.azure.net/"
		},
		"ls_sqlserver_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "secret-db-local"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/copy_copydata01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_excel_to_lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "DT_INSERT",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_fixo_xlsx_cor",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_azure_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "SalesLT",
									"tableName": "TbCor"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_fixo_xlsx_cor')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_azure_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_copydata02')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sql_to_sql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generic_azure_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "SalesLT",
									"tableName": "TB_ADF_COPY_SOURCE"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_azure_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "SalesLT",
									"tableName": "TB_ADF_COPY_TARGET"
								}
							}
						]
					},
					{
						"name": "sql_to_lake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sql_to_sql",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from saleslt.tb_adf_copy_target",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generic_azure_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "*",
									"tableName": "*"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "raw",
									"fileName": "copy_target.csv",
									"separatorFile": ";"
								}
							}
						]
					},
					{
						"name": "sqlserver_to_lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select cod_local,nome,cidade,bairro from bd_eventos_imersao.imersao.localizacao where estado = 'PE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generic_sqlserver_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "*",
									"tableName": "*"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "raw",
									"fileName": {
										"value": "@concat('localizacao_',formatDateTime(utcnow(),'yyymmdd'))",
										"type": "Expression"
									},
									"separatorFile": ";"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_azure_db')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text_2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_sqlserver_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/get_metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata File",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "transient",
									"fileName": "cidades.csv",
									"separatorFile": ";"
								}
							},
							"fieldList": [
								"size"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata File 2",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "transient",
									"directoryName": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"fileName": "moviesDB.csv",
									"separatorFile": ","
								}
							},
							"fieldList": [
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata Folder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata File 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "transient",
									"directoryName": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"fileName": "@toLower('')",
									"separatorFile": "@toLower('')"
								}
							},
							"fieldList": [
								"itemType"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata Table",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_azure_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "SalesLT",
									"tableName": "Customer"
								}
							},
							"fieldList": [
								"structure"
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text_2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_azure_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Controler",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "controller",
									"fileName": "controller_tables.csv",
									"separatorFile": ";"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup csv singleton",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup Controler",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "transient",
									"fileName": "cidades.csv",
									"separatorFile": ";"
								}
							}
						}
					},
					{
						"name": "Lookup table singleton",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup csv singleton",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azure_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "SalesLT",
									"tableName": "Customer"
								}
							}
						}
					},
					{
						"name": "Lookup csv array mode",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup table singleton",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "transient",
									"fileName": "cidades.csv",
									"separatorFile": ";"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup table array mode",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup csv array mode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azure_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "SalesLT",
									"tableName": "Customer"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup table query array mode",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup table array mode",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from saleslt.customer",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azure_db",
								"type": "DatasetReference",
								"parameters": {
									"schemaName": "*",
									"tableName": "*"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text_2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_azure_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/loop_get_filter_foreach_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata Folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "transient",
									"directoryName": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"fileName": "@toLower('')",
									"separatorFile": "@toLower('')"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter TXT",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata Folder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'.txt' )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter TXT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter TXT').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "transient to raw",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_generic_delimited_text_2",
											"type": "DatasetReference",
											"parameters": {
												"containerName": "transient",
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"separatorFile": ";"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_generic_parquet",
											"type": "DatasetReference",
											"parameters": {
												"containerName": "raw",
												"fileName": {
													"value": "@replace(item().name,'.txt','.parquet')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text_2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/loop_lookup_filter_foreach_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Controler",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"containerName": "controller",
									"fileName": "controller_tables.csv",
									"separatorFile": ";"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter Tables",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup Controler",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Controler').output.Value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().load_table,'1' )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach_loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "sql_db_local_to_lake",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_generic_sqlserver_db",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": {
													"value": "@item().schema_source",
													"type": "Expression"
												},
												"tableName": {
													"value": "@item().table_source",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_generic_parquet",
											"type": "DatasetReference",
											"parameters": {
												"containerName": "@item().container_target",
												"fileName": "@concat(item().file_target,'.parquet')"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text_2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_sqlserver_db')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/orquestrador')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "loop_get_filter_foreach_copy",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "loop_get_filter_foreach_copy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "loop_lookup_filter_foreach_copy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "loop_get_filter_foreach_copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "loop_lookup_filter_foreach_copy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "orquestrador"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/loop_get_filter_foreach_copy')]",
				"[concat(variables('factoryId'), '/pipelines/loop_lookup_filter_foreach_copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec Power Query Cli",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "exemplo_powerquery",
								"type": "DataFlowReference",
								"datasetParameters": {
									"ds_fixo_table_cliente": {},
									"UserQuerydsgenericdelimitedtext": {
										"containerName": "raw",
										"fileName": "powerquerycleintes.csv",
										"separatorFile": ";"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQuerydsgenericdelimitedtext",
											"dataset": {
												"referenceName": "ds_generic_delimited_text",
												"type": "DatasetReference",
												"parameters": {
													"containerName": "raw",
													"fileName": "powerquerycleintes.csv",
													"separatorFile": ";"
												}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserQuerydsgenericdelimitedtext"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "powerquerydataflow"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/exemplo_powerquery')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stored_procedure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "exec_proc_update_dt",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[SalesLT].[proc_activity_adf01_in]"
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "exec_proc_update_status",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "exec_proc_update_dt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[SalesLT].[proc_activity_adf02_in]",
							"storedProcedureParameters": {
								"preco": {
									"value": "50",
									"type": "Decimal"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_azure_sqldb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_calendario')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "triggers"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_canela_tempo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "triggers"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_evento_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "triggers"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_fixo_table_cliente')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azure_sqldb_powerquery",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ds_db"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldb_powerquery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_fixo_xlsx_cor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ds_xlsx"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Plan1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "plan_cor.xlsx",
						"fileSystem": "transient"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "cor",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_azure_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azure_sqldb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemaName": {
						"type": "string"
					},
					"tableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds_db"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azure_sqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_delimited_text')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					},
					"directoryName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"separatorFile": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds_csv"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directoryName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().separatorFile",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_delimited_text_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"separatorFile": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds_csv"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().separatorFile",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_fileserver_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_filesystem_local",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"separatorFile": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds_csv"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().separatorFile",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_filesystem_local')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds_parquet"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_parquet_dataflow')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds_parquet"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_sqlserver_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqlserver",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemaName": {
						"type": "string"
					},
					"tableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds_db"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_generic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds_json"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_movies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_api_new_y_t",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tokenAPI": {
						"type": "string"
					},
					"relativeURL": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds_json"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat(dataset().relativeURL,'&api-key=',dataset().tokenAPI)",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_api_new_y_t')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_api_new_y_t')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_api_new_y_t_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azure_sqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ls_azure_sqldb_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azure_sqldb_powerquery')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_azure_sqldb_powerquery_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "secret-key-datalake"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_filesystem_local')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('ls_filesystem_local_properties_typeProperties_host')]",
					"userId": "[parameters('ls_filesystem_local_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "secret-user-local"
					}
				},
				"connectVia": {
					"referenceName": "ir-selfhosted-t05winkel",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ir-selfhosted-t05winkel')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_key_vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_key_vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sqlserver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_key_vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ls_sqlserver_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "ir-selfhosted-t05winkel",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ir-selfhosted-t05winkel')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_key_vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ir-selfhosted-t05winkel')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_flow_artistas')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_generic_parquet",
								"type": "DatasetReference"
							},
							"name": "sArtista"
						},
						{
							"dataset": {
								"referenceName": "ds_generic_parquet",
								"type": "DatasetReference"
							},
							"name": "sEventoArtista"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_fixo_table_cliente",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "renameArtista"
						},
						{
							"name": "renameEventoArtista"
						},
						{
							"name": "colunaCalculadaeventoArtista"
						},
						{
							"name": "ArtistajoinEventoArtista"
						},
						{
							"name": "groupByArtistaValorPago"
						},
						{
							"name": "orderBy"
						}
					],
					"scriptLines": [
						"source(output(",
						"          COD_ARTISTA as integer,",
						"          CPF as string,",
						"          NOME as string,",
						"          COD_ESTILO as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> sArtista",
						"source(output(",
						"          CODIGO as integer,",
						"          VALOR_PGTO as decimal(19,4),",
						"          DT_PGTO as date,",
						"          FKCOD_ARTISTA as integer,",
						"          FKCOD_EVENTO as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> sEventoArtista",
						"sArtista select(mapColumn(",
						"          COD_ARTISTA,",
						"          NOME_ARTISTA = NOME",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> renameArtista",
						"sEventoArtista select(mapColumn(",
						"          eaVALOR_PGTO = VALOR_PGTO,",
						"          eaFKCOD_ARTISTA = FKCOD_ARTISTA,",
						"          eaFKCOD_EVENTO = FKCOD_EVENTO",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> renameEventoArtista",
						"renameEventoArtista derive(valorpgtodobrado = eaVALOR_PGTO*2) ~> colunaCalculadaeventoArtista",
						"renameArtista, colunaCalculadaeventoArtista join(COD_ARTISTA == eaFKCOD_ARTISTA,",
						"     joinType:'inner',",
						"     broadcast: 'auto')~> ArtistajoinEventoArtista",
						"ArtistajoinEventoArtista aggregate(groupBy(COD_ARTISTA,",
						"          NOME_ARTISTA),",
						"     faturamento_total = sum(valorpgtodobrado)) ~> groupByArtistaValorPago",
						"groupByArtistaValorPago sort(asc(faturamento_total, true)) ~> orderBy",
						"orderBy sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_fixo_table_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/exemplo_powerquery')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ds_fixo_table_cliente",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ds_fixo_table_cliente",
							"dataset": {
								"referenceName": "ds_fixo_table_cliente",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared ds_fixo_table_cliente = let AdfDoc = Sql.Database(\"sql-turma05-imersao-prod-winkel.database.windows.net\", \"sqldb-turma05im-prod-winkel\", [CreateNavigationProperties = false]), InputTable = AdfDoc{[Schema=\"SalesLT\",Item=\"Customer\"]}[Data] in InputTable;\r\nshared UserQuery = let Source = #\"ds_fixo_table_cliente\",\r\n  #\"Removed columns\" = Table.RemoveColumns(Source, {\"Suffix\", \"PasswordHash\", \"PasswordSalt\", \"rowguid\", \"ModifiedDate\"}),\r\n  #\"Added custom\" = Table.TransformColumnTypes(Table.AddColumn(#\"Removed columns\", \"NomeCompleto\", each [FirstName] & \" \" & [LastName]), {{\"NomeCompleto\", type text}}) in #\"Added custom\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_fixo_table_cliente')]"
			]
		}
	]
}